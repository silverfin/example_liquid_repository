name: update_liquid_templates
run-name: Update Liquid templates
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  test-templates:
    runs-on: ubuntu-latest
    env:
      SF_API_CLIENT_ID: "${{ secrets.SF_API_CLIENT_ID }}"
      SF_API_SECRET: "${{ secrets.SF_API_SECRET }}"
    steps:
      - name: Checkout Repository - Fetch all history for all tags and branches
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Add sf-toolkit package latest version
        run: |
          npm install https://github.com/silverfin/sf-toolkit.git#run-liquid-test-raw-output
          VERSION=$(./node_modules/sf_toolkit/bin/cli.js -V)
          echo "CLI version: ${VERSION}"
      - name: Create Silverfin config file
        run: |
          mkdir -p $HOME/.silverfin/
          touch $HOME/.silverfin/config.json
          echo '${{ secrets.CONFIG_JSON }}' > $HOME/.silverfin/config.json
          node ./node_modules/sf_toolkit/bin/cli.js config --set-firm="$FIRM_ID"
          node ./node_modules/sf_toolkit/bin/cli.js config --get-firm
      - name: Get changed liquid files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          since_last_remote_commit: true
          dir_names: true
          files: |
            **/*.liquid
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      - name: Update liquid templates
        run: |
          declare -a ERRORS
          for CURRENT_DIR in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Checking ${CURRENT_DIR}"
            while [[ "${CURRENT_DIR}" != "." ]]; do
              if [[ -e "${CURRENT_DIR}/config.json" ]]; then
                HANDLE=$(cat ${CURRENT_DIR}/config.json | jq -r ".handle // .name")
                echo "Found config.json in ${CURRENT_DIR}. Handle: ${HANDLE}"
                if [[ "${CURRENT_DIR}" == *reconciliation_texts* ]]; then
                  OUTPUT=$(node ./node_modules/sf_toolkit/bin/cli.js update-reconciliation --handle="${HANDLE}" --yes)
                elif [[ "${CURRENT_DIR}" == *shared_parts* ]]; then
                  OUTPUT=$(node ./node_modules/sf_toolkit/bin/cli.js update-shared-part --shared-part="${HANDLE}" --yes)
                fi
                if [[ "$OUTPUT" =~ "201" ]]; then
                  echo "${HANDLE}: updated"
                else
                  echo "${HANDLE}: failed"
                  ERRORS+=("${OUTPUT}")
                fi
                break
              else
                echo "File not found in ${CURRENT_DIR}"
                CURRENT_DIR="$(dirname "${CURRENT_DIR}")"
              fi
            done
          done
          # CHECK ERRORS PRESENT
          if [ ${#ERRORS[@]} -eq 0 ]; then
              echo "All templates have been updated"
          else
              echo "Errors: ${ERRORS[@]}"
              exit 1
          fi
      - name: Prepare CONFIG_JSON for secret
        run: |
          CONFIG_JSON=$(cat $HOME/.silverfin/config.json | tr -d '\n')
          echo "CONFIG_JSON=${CONFIG_JSON}" >> $GITHUB_ENV
        if: always()
      - name: Store CONFIG_JSON as secret
        uses: gliech/create-github-secret-action@v1
        with:
          name: CONFIG_JSON
          value: "${{ env.CONFIG_JSON }}"
          pa_token: ${{ secrets.REPO_ACCESS_TOKEN }}
        if: always()